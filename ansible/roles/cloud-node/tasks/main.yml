---
# Common things for all cloud images

    - name: System Log                 | stat /boot/grub/grub.conf
      stat: path=/boot/grub/grub.conf
      register: grub1_conf

    - name: System Log                 | change /boot/grub/grub.conf
      when: grub1_conf.stat.exists
      replace:
        dest: /boot/grub/grub.conf
        regexp: 'console=hvc0'
        replace: 'console=ttyS0 xen_emul_unplug=unnecessary'

    - name: System Log                 | stat /boot/grub2/grub.cfg
      stat: path=/boot/grub2/grub.cfg
      register: grub2_conf

    - name: System Log                 | change /etc/default/grub
      when: grub2_conf.stat.exists
      replace:
        dest: /etc/default/grub
        regexp: 'rhgb'
        replace: 'console=ttyS0 xen_emul_unplug=unnecessary'
      register: grub2_var

    - name: System Log                 | run grub2-mkconfig
      when: grub2_var.changed and grub2_conf.stat.exists
      command: grub2-mkconfig -o /boot/grub2/grub.cfg

    - name: Packages                   | Add EPEL repository
      when: ansible_os_family == 'RedHat'
      yum:
        name: https://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-8.noarch.rpm
        state: installed

    - name: Packages                   | Add Percona repository
      when: ansible_os_family == 'RedHat'
      yum:
        name: https://www.percona.com/redir/downloads/percona-release/redhat/0.1-4/percona-release-0.1-4.noarch.rpm
        state: installed

    - name: Packages                   | Update OS
      when: ansible_os_family == 'RedHat'
      yum:
        name: '*'
        state: latest
        disablerepo: percona-release-x86_64

    - name: Packages                   | Install OS tools
      when: ansible_os_family == 'RedHat'
      yum: name={{ item }} state=installed
      with_items:
        - cloud-init
        - firewalld

    - name: Firewalld                  | Start
      when: ansible_os_family == 'RedHat'
      service: name=firewalld state=started enabled=yes

    - name: cloud-init                 | Cleanup cache
      file: path={{ item }} state=absent
      with_items:
        - /var/lib/cloud/sem
        - /var/lib/cloud/data
        - /var/lib/cloud/instance
        - /var/lib/cloud/instances
        - /var/log/cloud-init.log
        - /var/log/cloud-init-output.log

    - name: cloud-init                 | Create per-once dir
      file: path=/var/lib/cloud/scripts/per-once state=directory

    - name: cloud-init                 | Fix start-up sequence
      replace:
        dest: /usr/lib/systemd/system/cloud-final.service
        regexp: 'After=network.target'
        replace: 'After=mysqld.service network.target'

