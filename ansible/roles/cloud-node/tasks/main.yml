---
# Common things for all cloud images

    - name: Packages                   | Install OS tools
      when: ansible_os_family == 'RedHat'
      yum: name={{ item }} state=installed
      with_items:
        - lvm2

    - name: Data partition             | list
      shell: ls /dev/sda /dev/sdb /dev/xvdb | grep -v ^$(pvdisplay -c | grep ':VolGroup00:' | cut -d ':' -f 1 | tr -d '[:space:]' | sed 's/[0-9]$//')$
      register: available_drives
      failed_when: available_drives.stdout_lines|length > 1
      changed_when: False

    - name: Data partition             | Create Volume Group
      lvg:
        vg: DataVG
        pvs: "{{ available_drives.stdout_lines[0] }}"

    - name: Data partition             | Create Thin Pool
      register: thin_pool
      failed_when: "thin_pool | failed and 'Sorry, no shrinking of DataLV to 0 permitted' not in thin_pool.msg"
      lvol:
        lv: DataLV
        vg: DataVG
        size: 100%FREE
        opts: --thinpool ThinPool -V 1G

    - name: Data partition             | Format
      when: available_drives.stdout_lines|length == 1
      filesystem:
        fstype: xfs
        dev: /dev/DataVG/DataLV
        opts: -L DATA

    - name: Data partition             | Mount
      when: available_drives.stdout_lines|length == 1
      mount:
        name: /srv
        src: LABEL=DATA
        fstype: xfs
        opts: defaults,nofail
        state: mounted

    - name: System Log                 | stat /boot/grub/grub.conf
      stat: path=/boot/grub/grub.conf
      register: grub1_conf

    - name: System Log                 | change /boot/grub/grub.conf
      when: grub1_conf.stat.exists
      replace:
        dest: /boot/grub/grub.conf
        regexp: 'console=hvc0'
        replace: 'console=ttyS0 xen_emul_unplug=unnecessary'

    - name: System Log                 | stat /boot/grub2/grub.cfg
      stat: path=/boot/grub2/grub.cfg
      register: grub2_conf

    - name: System Log                 | change /etc/default/grub
      when: grub2_conf.stat.exists
      replace:
        dest: /etc/default/grub
        regexp: 'rhgb'
        replace: 'console=ttyS0 xen_emul_unplug=unnecessary'
      register: grub2_var

    - name: System Log                 | run grub2-mkconfig
      when: grub2_var.changed and grub2_conf.stat.exists
      command: grub2-mkconfig -o /boot/grub2/grub.cfg

    - name: Packages                   | Add EPEL repository
      when: ansible_os_family == 'RedHat'
      yum:
        name: https://dl.fedoraproject.org/pub/epel/7/x86_64/Packages/e/epel-release-7-11.noarch.rpm
        state: installed

    - name: Packages                   | Add Percona repository
      when: ansible_os_family == 'RedHat'
      yum:
        name: https://www.percona.com/redir/downloads/percona-release/redhat/0.1-4/percona-release-0.1-4.noarch.rpm
        state: installed

    - name: Packages                   | Update OS
      when: ansible_os_family == 'RedHat'
      yum:
        name: '*'
        state: latest
        disablerepo: percona-release-x86_64

    - name: Packages                   | Install OS tools
      when: ansible_os_family == 'RedHat'
      yum: name={{ item }} state=installed
      with_items:
        - screen
        - yum-utils
        - cloud-init
        - yum-cron
        - firewalld

    - name: Firewalld                  | Start
      when: ansible_os_family == 'RedHat'
      service: name=firewalld state=started enabled=yes

    - name: cloud-init                 | Cleanup cache
      file: path={{ item }} state=absent
      with_items:
        - /var/lib/cloud/sem
        - /var/lib/cloud/data
        - /var/lib/cloud/instance
        - /var/lib/cloud/instances
        - /var/log/cloud-init.log
        - /var/log/cloud-init-output.log

    - name: cloud-init                 | Create dirs
      file: path={{ item }} state=directory
      with_items:
        - /var/lib/cloud/scripts/per-once
        - /var/lib/cloud/scripts/per-boot
        - /etc/systemd/system/getty@.service.d

    - name: cloud-init                 | Disable console cleanup
      copy:
        content: |
          [Service]
          TTYVTDisallocate=no
        dest: /etc/systemd/system/getty@.service.d/nodisallocate.conf
        mode: 0644

    - name: Root                       | Set root password
      when: ansible_virtualization_type == "virtualbox"
      user:
        name: root
        password: "$6$J7pGg2a7vuRTbTV5$vORqkiAKdkyomU3iYwr/SPn.yLIkGsl5ludEx5DUvGVASSTquTjOldHt/nUWrFRnJeZyzt6CIOjAcugbcfGtN1"

    - name: Root                       | Set root password
      when: ansible_virtualization_type == "virtualbox"
      command: chage -d 0 root
      changed_when: False

    - name: Root                       | Disable root password
      when: ansible_virtualization_type == "xen"
      command: passwd --delete root
      changed_when: False

    - name: Root                       | Disable root password
      when: ansible_virtualization_type == "xen"
      command: passwd --lock root
      changed_when: False

    - name: cloud-init                 | Fix start-up sequence
      replace:
        dest: /usr/lib/systemd/system/chronyd.service
        regexp: 'After='
        replace: 'Before=cloud-config.target\nAfter=network-online.target '

    - name: cloud-init                 | Disable root user
      copy:
        content: |
          no_ssh_fingerprints: true
          disable_root: true
        dest: /etc/cloud/cloud.cfg.d/00_disable-root.cfg
        mode: 0644

    - name: cloud-init                 | Add admin user
      user:
        name: admin
        comment: Cloud User
        groups: wheel,adm,systemd-journal
        shell: /bin/bash

    - name: cloud-init                 | Add sudo for admin user
      copy:
        content: |
          admin ALL=(ALL) NOPASSWD: ALL
        dest: /etc/sudoers.d/90-admin-user
        mode: 0440

    - name: cloud-init                 | Change cloud user
      replace:
        dest: /etc/cloud/cloud.cfg
        regexp: 'name: centos'
        replace: 'name: admin'

    - name: cloud-init                 | Configure yum-cron
      replace:
        dest: /etc/yum/yum-cron-hourly.conf
        regexp: 'update_cmd = default'
        replace: 'update_cmd = minimal-security'

    - name: cloud-init                 | Configure yum-cron
      replace:
        dest: /etc/yum/yum-cron.conf
        regexp: 'update_cmd = default'
        replace: 'update_cmd = minimal-security'

    - name: Data partition             | Auto resize
      copy:
        content: |
          #!/bin/sh

          set -o errexit

          pvresize $(ls /dev/sda /dev/sdb /dev/xvdb 2>/dev/null | grep -v ^$(pvdisplay -c | grep ':VolGroup00:' | cut -d ':' -f 1 | tr -d '[:space:]' | sed 's/[0-9]$//')$)
          lvextend -l '100%VG' /dev/DataVG/ThinPool
          lvextend -l '80%VG' /dev/DataVG/DataLV
          xfs_growfs -d /srv
        dest: /var/lib/cloud/scripts/per-boot/resize-xfs
        mode: 0755

    - import_tasks: security.yml
    - import_tasks: ovf.yml
    - import_tasks: VBoxGuestAdditions.yml

