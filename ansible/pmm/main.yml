---
- hosts: all
  become: yes
  gather_facts: yes
  roles:
    - cloud-node
    - mysql-init

  tasks:
    - name: MySQL password             | Generate
      when: not root_mycnf_file.stat.exists
      command: /var/lib/cloud/scripts/per-once/init-mysql-password

    - name: MySQL password             | Remove script
      file:
        path: /var/lib/cloud/scripts/per-once/init-mysql-password
        state: absent

    - name: PMM                        | Add Percona-Laboratory YUM repository
      when: ansible_os_family == 'RedHat'
      yum_repository:
        name: percona-laboratory-x86_64
        description: Percona-Laboratory YUM repository - x86_64
        baseurl: https://repo.percona.com/laboratory/7/RPMS/x86_64/
        gpgcheck: no
        enabled: no

    - name: PMM                        | Install RPMs
      when: ansible_os_family == 'RedHat'
      yum: name={{ item }} state=installed enablerepo=percona-laboratory-x86_64
      with_items:
        - consul
        - grafana
        - nginx
        - prometheus
        - orchestrator
        - node_exporter
        - percona-qan-api
        - percona-qan-app
        - percona-toolkit
        - percona-dashboards
        - pmm-server

    - name: Disable SELinux
      selinux:
        policy: targeted
        state: permissive

    - name: Orchestrator               | Create MySQL database
      mysql_db:
        name: orchestrator
        state: present

    - name: Orchestrator               | Create MySQL user
      mysql_user:
        name: orchestrator
        host: localhost
        password: '*0AD183209365CECFB9275669074B645DFEF2D180'
        priv: 'orchestrator.*:ALL'
        encrypted: yes
        state: present

    - name: qan-api                    | Create MySQL database
      mysql_db:
        name: pmm
        state: present
      register: pmm_db

    - name: qan-api                    | Import MySQL database
      when: pmm_db.changed
      mysql_db:
        name: pmm
        state: import
        target: /usr/share/percona-qan-api/schema/pmm.sql

    - name: qan-api                    | Create MySQL user
      mysql_user:
        name: percona
        host: localhost
        password: '*25919B3ABBC2A54904C826DF14F11612455A5FAA'
        priv: 'pmm.*:ALL'
        encrypted: yes
        state: present

    - name: PMM                        | Fix nginx config
      replace:
        dest: /etc/nginx/nginx.conf
        regexp: '^(\s*)listen'
        replace: '\1#listen'

    - name: PMM                        | Start services
      service: name={{ item }} state=started enabled=yes
      with_items:
        - consul
        - node_exporter
        - prometheus
        - orchestrator
        - grafana-server
        - percona-qan-api
        - nginx

    - name: PMM                        | Check dashboards version
      stat: path=/var/lib/grafana/PERCONA_DASHBOARDS_VERSION
      register: dashboards_file

    - name: PMM                        | Import dashboards
      when: not dashboards_file.stat.exists
      command: /usr/share/percona-dashboards/import-dashboards.py

    - name: PMM                        | Add firewalld rule
      when: ansible_os_family == 'RedHat'
      firewalld: port={{ item }} permanent=true state=enabled immediate=yes
      with_items:
          - 80/tcp
          - 443/tcp

    - name: PMM                        | Add script which show PMM URL
      copy:
        content: |
          #!/bin/sh

          set -o errexit

          SOURCE=$(
              cat /var/lib/cloud/data/result.json 2>/dev/null \
                  | python -c 'import json, sys; print json.load(sys.stdin)["v1"]["datasource"];' 2>/dev/null
          )

          IP=$(ip route get 1 | awk '{print $NF;exit}')
          if [ "x$SOURCE" = "xDataSourceEc2" ]; then
              IP=$(curl --connect-timeout 5 -s http://169.254.169.254/latest/meta-data/public-ipv4)
          fi

          echo "
          ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                Percona Monitoring and Management           https://${IP}/
          ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
          "
        dest: /var/lib/cloud/scripts/per-boot/show-pmm-url
        mode: 0755

