---
- hosts: all
  become: yes
  gather_facts: yes
  roles:
    - cloud-node
    - mysql-init

  tasks:
    - name: MySQL password   | Generate
      when: not root_mycnf_file.stat.exists
      command: /var/lib/cloud/scripts/per-once/init-mysql-password

    - name: MySQL password   | Remove script
      file:
        path: /var/lib/cloud/scripts/per-once/init-mysql-password
        state: absent

    - name: Add Mykola repository
      when: ansible_os_family == 'RedHat'
      yum_repository:
        name: mykola
        description: Mykola temporary repo
        baseurl: http://34.195.117.48/epel-7-x86_64/
        gpgcheck: no
        enabled: yes

    - name: Install PMM Server
      when: ansible_os_family == 'RedHat'
      yum: name={{ item }} state=installed
      with_items:
        - consul
        - grafana
        - nginx
        - prometheus
        - orchestrator
        - node_exporter
        - percona-qan-api
        - percona-qan-app
        - percona-toolkit
        - percona-dashboards
        - pmm-server

    - name: Disable SELinux
      selinux:
        policy: targeted
        state: permissive

    - name: Create orchestrator database
      mysql_db:
        name: orchestrator
        state: present

    - name: Create orchestrator user
      mysql_user:
        name: orchestrator
        host: localhost
        password: '*0AD183209365CECFB9275669074B645DFEF2D180'
        priv: 'orchestrator.*:ALL'
        encrypted: yes
        state: present

    - name: Create PMM database
      mysql_db:
        name: pmm
        state: present
      register: pmm_db

    - name: Import PMM database
      when: pmm_db.changed
      mysql_db:
        name: pmm
        state: import
        target: /usr/share/percona-qan-api/schema/pmm.sql

    - name: Create PMM user
      mysql_user:
        name: percona
        host: localhost
        password: '*25919B3ABBC2A54904C826DF14F11612455A5FAA'
        priv: 'pmm.*:ALL'
        encrypted: yes
        state: present

    - name: Fix nginx config
      replace:
        dest: /etc/nginx/nginx.conf
        regexp: '^(\s*)listen'
        replace: '\1#listen'

    - name: Start PMM Server
      service: name={{ item }} state=started enabled=yes
      with_items:
        - consul
        - node_exporter
        - prometheus
        - orchestrator
        - grafana-server
        - percona-qan-api
        - nginx

    - stat: path=/var/lib/grafana/PERCONA_DASHBOARDS_VERSION
      register: dashboards_file

    - name: Import dashboards
      when: not dashboards_file.stat.exists
      command: /usr/share/percona-dashboards/import-dashboards.py

    - name: Add firewalld rule
      when: ansible_os_family == 'RedHat'
      firewalld: port={{ item }} permanent=true state=enabled immediate=yes
      with_items:
          - 80/tcp
          - 443/tcp

